syntax = "proto3";

package test.v1;

import "nrf110/permify/v1/permify.proto";
import "test/v1/common.proto";

option go_package = "test/v1;testv1";

message NestedAttribute {
  string foo = 1 [(nrf110.permify.v1.attribute_name) = "foo"];
}

message MappedAttribute {
  string bar = 1 [(nrf110.permify.v1.attribute_name) = "foo"];
}

message ComplexAttribute {
  repeated string blah = 1;
  double blar = 2;
}

message AttributesRequest {
  option (nrf110.permify.v1.resource_type) = "Attributes";

  repeated ComplexAttribute complex = 1 [(nrf110.permify.v1.attribute_name) = "complex"];
  repeated NestedAttribute nested = 2;
  map<string, MappedAttribute> mapped = 3;
  string id = 4 [(nrf110.permify.v1.resource_id) = true];
  string company_id = 5 [(nrf110.permify.v1.tenant_id) = true];
}

service Attributes {
  rpc WithAttributes(AttributesRequest) returns (Response) {
    option (nrf110.permify.v1.permission) = "read";
  }
}
