// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: test/v1/error_cases.proto

package testv1

import (
	_ "github.com/nrf110/connectrpc-permify/gen/nrf110/permify/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Case 1: Resource without resource_id
type NoResourceId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NoResourceId) Reset() {
	*x = NoResourceId{}
	mi := &file_test_v1_error_cases_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NoResourceId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoResourceId) ProtoMessage() {}

func (x *NoResourceId) ProtoReflect() protoreflect.Message {
	mi := &file_test_v1_error_cases_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoResourceId.ProtoReflect.Descriptor instead.
func (*NoResourceId) Descriptor() ([]byte, []int) {
	return file_test_v1_error_cases_proto_rawDescGZIP(), []int{0}
}

func (x *NoResourceId) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NoResourceId) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Case 2: Valid resource for comparison
type ValidResource struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidResource) Reset() {
	*x = ValidResource{}
	mi := &file_test_v1_error_cases_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidResource) ProtoMessage() {}

func (x *ValidResource) ProtoReflect() protoreflect.Message {
	mi := &file_test_v1_error_cases_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidResource.ProtoReflect.Descriptor instead.
func (*ValidResource) Descriptor() ([]byte, []int) {
	return file_test_v1_error_cases_proto_rawDescGZIP(), []int{1}
}

func (x *ValidResource) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ValidResource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Case 3: Resource with multiple resource_id fields (should handle or error gracefully)
type MultipleResourceIds struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id1           string                 `protobuf:"bytes,1,opt,name=id1,proto3" json:"id1,omitempty"`
	Id2           string                 `protobuf:"bytes,2,opt,name=id2,proto3" json:"id2,omitempty"`
	TenantId      string                 `protobuf:"bytes,3,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MultipleResourceIds) Reset() {
	*x = MultipleResourceIds{}
	mi := &file_test_v1_error_cases_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MultipleResourceIds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultipleResourceIds) ProtoMessage() {}

func (x *MultipleResourceIds) ProtoReflect() protoreflect.Message {
	mi := &file_test_v1_error_cases_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultipleResourceIds.ProtoReflect.Descriptor instead.
func (*MultipleResourceIds) Descriptor() ([]byte, []int) {
	return file_test_v1_error_cases_proto_rawDescGZIP(), []int{2}
}

func (x *MultipleResourceIds) GetId1() string {
	if x != nil {
		return x.Id1
	}
	return ""
}

func (x *MultipleResourceIds) GetId2() string {
	if x != nil {
		return x.Id2
	}
	return ""
}

func (x *MultipleResourceIds) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

// Case 4: Resource with multiple tenant_id fields
type MultipleTenantIds struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Tenant1       string                 `protobuf:"bytes,2,opt,name=tenant1,proto3" json:"tenant1,omitempty"`
	Tenant2       string                 `protobuf:"bytes,3,opt,name=tenant2,proto3" json:"tenant2,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MultipleTenantIds) Reset() {
	*x = MultipleTenantIds{}
	mi := &file_test_v1_error_cases_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MultipleTenantIds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultipleTenantIds) ProtoMessage() {}

func (x *MultipleTenantIds) ProtoReflect() protoreflect.Message {
	mi := &file_test_v1_error_cases_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultipleTenantIds.ProtoReflect.Descriptor instead.
func (*MultipleTenantIds) Descriptor() ([]byte, []int) {
	return file_test_v1_error_cases_proto_rawDescGZIP(), []int{3}
}

func (x *MultipleTenantIds) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MultipleTenantIds) GetTenant1() string {
	if x != nil {
		return x.Tenant1
	}
	return ""
}

func (x *MultipleTenantIds) GetTenant2() string {
	if x != nil {
		return x.Tenant2
	}
	return ""
}

var File_test_v1_error_cases_proto protoreflect.FileDescriptor

const file_test_v1_error_cases_proto_rawDesc = "" +
	"\n" +
	"\x19test/v1/error_cases.proto\x12\atest.v1\x1a\x1fnrf110/permify/v1/permify.proto\x1a\x14test/v1/common.proto\"U\n" +
	"\fNoResourceId\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription:\x0f»\x01\vBadResource\"D\n" +
	"\rValidResource\x12\x14\n" +
	"\x02id\x18\x01 \x01(\tB\x04\xc0\xbb\x01\x01R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name:\t»\x01\x05Valid\"u\n" +
	"\x13MultipleResourceIds\x12\x16\n" +
	"\x03id1\x18\x01 \x01(\tB\x04\xc0\xbb\x01\x01R\x03id1\x12\x16\n" +
	"\x03id2\x18\x02 \x01(\tB\x04\xc0\xbb\x01\x01R\x03id2\x12!\n" +
	"\ttenant_id\x18\x03 \x01(\tB\x04Ȼ\x01\x01R\btenantId:\v»\x01\aMultiId\"z\n" +
	"\x11MultipleTenantIds\x12\x14\n" +
	"\x02id\x18\x01 \x01(\tB\x04\xc0\xbb\x01\x01R\x02id\x12\x1e\n" +
	"\atenant1\x18\x02 \x01(\tB\x04Ȼ\x01\x01R\atenant1\x12\x1e\n" +
	"\atenant2\x18\x03 \x01(\tB\x04Ȼ\x01\x01R\atenant2:\x0f»\x01\vMultiTenant2\xae\x02\n" +
	"\x10ErrorCaseService\x12A\n" +
	"\vBadResource\x12\x15.test.v1.NoResourceId\x1a\x11.test.v1.Response\"\b»\x01\x04read\x12@\n" +
	"\tValidCase\x12\x16.test.v1.ValidResource\x1a\x11.test.v1.Response\"\b»\x01\x04read\x12H\n" +
	"\vMultipleIds\x12\x1c.test.v1.MultipleResourceIds\x1a\x11.test.v1.Response\"\b»\x01\x04read\x12K\n" +
	"\x0fMultipleTenants\x12\x1a.test.v1.MultipleTenantIds\x1a\x11.test.v1.Response\"\t»\x01\x05writeB\x10Z\x0etest/v1;testv1b\x06proto3"

var (
	file_test_v1_error_cases_proto_rawDescOnce sync.Once
	file_test_v1_error_cases_proto_rawDescData []byte
)

func file_test_v1_error_cases_proto_rawDescGZIP() []byte {
	file_test_v1_error_cases_proto_rawDescOnce.Do(func() {
		file_test_v1_error_cases_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_test_v1_error_cases_proto_rawDesc), len(file_test_v1_error_cases_proto_rawDesc)))
	})
	return file_test_v1_error_cases_proto_rawDescData
}

var file_test_v1_error_cases_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_test_v1_error_cases_proto_goTypes = []any{
	(*NoResourceId)(nil),        // 0: test.v1.NoResourceId
	(*ValidResource)(nil),       // 1: test.v1.ValidResource
	(*MultipleResourceIds)(nil), // 2: test.v1.MultipleResourceIds
	(*MultipleTenantIds)(nil),   // 3: test.v1.MultipleTenantIds
	(*Response)(nil),            // 4: test.v1.Response
}
var file_test_v1_error_cases_proto_depIdxs = []int32{
	0, // 0: test.v1.ErrorCaseService.BadResource:input_type -> test.v1.NoResourceId
	1, // 1: test.v1.ErrorCaseService.ValidCase:input_type -> test.v1.ValidResource
	2, // 2: test.v1.ErrorCaseService.MultipleIds:input_type -> test.v1.MultipleResourceIds
	3, // 3: test.v1.ErrorCaseService.MultipleTenants:input_type -> test.v1.MultipleTenantIds
	4, // 4: test.v1.ErrorCaseService.BadResource:output_type -> test.v1.Response
	4, // 5: test.v1.ErrorCaseService.ValidCase:output_type -> test.v1.Response
	4, // 6: test.v1.ErrorCaseService.MultipleIds:output_type -> test.v1.Response
	4, // 7: test.v1.ErrorCaseService.MultipleTenants:output_type -> test.v1.Response
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_test_v1_error_cases_proto_init() }
func file_test_v1_error_cases_proto_init() {
	if File_test_v1_error_cases_proto != nil {
		return
	}
	file_test_v1_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_test_v1_error_cases_proto_rawDesc), len(file_test_v1_error_cases_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_test_v1_error_cases_proto_goTypes,
		DependencyIndexes: file_test_v1_error_cases_proto_depIdxs,
		MessageInfos:      file_test_v1_error_cases_proto_msgTypes,
	}.Build()
	File_test_v1_error_cases_proto = out.File
	file_test_v1_error_cases_proto_goTypes = nil
	file_test_v1_error_cases_proto_depIdxs = nil
}
