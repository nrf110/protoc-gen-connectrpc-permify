syntax = "proto3";

package example.v1;

option go_package = "github.com/example/example-service/internal/gen/proto/example/v1;examplev1";

import "nrf110/permit/v1/permit.proto";
import "proto/example/v1/common.proto";

message RepeatedResource {
  option (nrf110.permit.v1.resource_type) = "Repeated";

  string name = 1;
}

message RepeatedResourceRequest {
  repeated RepeatedResource resources = 1;
}

message RepeatedResourceWithIdsRequest {
  repeated NestedResource resources = 1;
  string name = 2;
}

message RepeatedId {
  repeated string ids = 1 [(nrf110.permit.v1.resource_id) = true];
  string company_id = 2 [(nrf110.permit.v1.tenant_id) = true];
}

message RepeatedResourceWithRepeatedIds {
  option (nrf110.permit.v1.resource_type) = "Repeated";

  repeated RepeatedId repeats = 1;
}

message RepeatedResourceWithRepeatedIdsRequest {
  repeated RepeatedResourceWithRepeatedIds resources = 1;
  string name = 2;
}

message MappedResourceRequest {
  map<string, NestedResource> mapped = 1;
}

message MappedIds {
  map<string, string> ids = 1 [(nrf110.permit.v1.resource_id) = true];
  string company_id = 2 [(nrf110.permit.v1.tenant_id) = true];
}

message NestedResourceWithMappedIds {
  option (nrf110.permit.v1.resource_type) = "NestedMapped";
  map<string, MappedIds> nested = 1;
}

message MappedResourceWithNestedMappedIds {
  map<string, NestedResourceWithMappedIds> resources = 1;
}

message MappedResourceWithNestedMappedIdsRequest {
  map<string, MappedResourceWithNestedMappedIds> mapped = 1;
}

service Bulk {
  rpc Simple(RepeatedResourceRequest) returns (Response) {
    option (nrf110.permit.v1.action) = "create";
    option (nrf110.permit.v1.bulk_check_mode) = any_of;
  }

  rpc Nested(RepeatedResourceWithIdsRequest) returns (Response) {
    option (nrf110.permit.v1.action) = "edit";
    option (nrf110.permit.v1.bulk_check_mode) = any_of;
  }

  rpc Repeats(RepeatedResourceWithRepeatedIdsRequest) returns (Response) {
    option (nrf110.permit.v1.action) = "edit";
    option (nrf110.permit.v1.bulk_check_mode) = any_of;
  }

  rpc Mapped(MappedResourceRequest) returns (Response) {
    option (nrf110.permit.v1.action) = "create";
    option (nrf110.permit.v1.bulk_check_mode) = any_of;
  }

  rpc NestedMapped(MappedResourceWithNestedMappedIdsRequest) returns (Response) {
    option (nrf110.permit.v1.action) = "edit";
    option (nrf110.permit.v1.bulk_check_mode) = any_of;
  }
}