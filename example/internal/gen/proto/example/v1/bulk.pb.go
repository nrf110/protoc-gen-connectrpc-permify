// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: proto/example/v1/bulk.proto

package examplev1

import (
	_ "github.com/nrf110/connectrpc-permit/gen/nrf110/permit/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RepeatedResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *RepeatedResource) Reset() {
	*x = RepeatedResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_example_v1_bulk_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepeatedResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepeatedResource) ProtoMessage() {}

func (x *RepeatedResource) ProtoReflect() protoreflect.Message {
	mi := &file_proto_example_v1_bulk_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepeatedResource.ProtoReflect.Descriptor instead.
func (*RepeatedResource) Descriptor() ([]byte, []int) {
	return file_proto_example_v1_bulk_proto_rawDescGZIP(), []int{0}
}

func (x *RepeatedResource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RepeatedResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resources []*RepeatedResource `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *RepeatedResourceRequest) Reset() {
	*x = RepeatedResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_example_v1_bulk_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepeatedResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepeatedResourceRequest) ProtoMessage() {}

func (x *RepeatedResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_example_v1_bulk_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepeatedResourceRequest.ProtoReflect.Descriptor instead.
func (*RepeatedResourceRequest) Descriptor() ([]byte, []int) {
	return file_proto_example_v1_bulk_proto_rawDescGZIP(), []int{1}
}

func (x *RepeatedResourceRequest) GetResources() []*RepeatedResource {
	if x != nil {
		return x.Resources
	}
	return nil
}

type RepeatedResourceWithIdsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resources []*NestedResource `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty"`
	Name      string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *RepeatedResourceWithIdsRequest) Reset() {
	*x = RepeatedResourceWithIdsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_example_v1_bulk_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepeatedResourceWithIdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepeatedResourceWithIdsRequest) ProtoMessage() {}

func (x *RepeatedResourceWithIdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_example_v1_bulk_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepeatedResourceWithIdsRequest.ProtoReflect.Descriptor instead.
func (*RepeatedResourceWithIdsRequest) Descriptor() ([]byte, []int) {
	return file_proto_example_v1_bulk_proto_rawDescGZIP(), []int{2}
}

func (x *RepeatedResourceWithIdsRequest) GetResources() []*NestedResource {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *RepeatedResourceWithIdsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RepeatedId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids       []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	CompanyId string   `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *RepeatedId) Reset() {
	*x = RepeatedId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_example_v1_bulk_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepeatedId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepeatedId) ProtoMessage() {}

func (x *RepeatedId) ProtoReflect() protoreflect.Message {
	mi := &file_proto_example_v1_bulk_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepeatedId.ProtoReflect.Descriptor instead.
func (*RepeatedId) Descriptor() ([]byte, []int) {
	return file_proto_example_v1_bulk_proto_rawDescGZIP(), []int{3}
}

func (x *RepeatedId) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *RepeatedId) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

type RepeatedResourceWithRepeatedIds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Repeats []*RepeatedId `protobuf:"bytes,1,rep,name=repeats,proto3" json:"repeats,omitempty"`
}

func (x *RepeatedResourceWithRepeatedIds) Reset() {
	*x = RepeatedResourceWithRepeatedIds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_example_v1_bulk_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepeatedResourceWithRepeatedIds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepeatedResourceWithRepeatedIds) ProtoMessage() {}

func (x *RepeatedResourceWithRepeatedIds) ProtoReflect() protoreflect.Message {
	mi := &file_proto_example_v1_bulk_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepeatedResourceWithRepeatedIds.ProtoReflect.Descriptor instead.
func (*RepeatedResourceWithRepeatedIds) Descriptor() ([]byte, []int) {
	return file_proto_example_v1_bulk_proto_rawDescGZIP(), []int{4}
}

func (x *RepeatedResourceWithRepeatedIds) GetRepeats() []*RepeatedId {
	if x != nil {
		return x.Repeats
	}
	return nil
}

type RepeatedResourceWithRepeatedIdsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resources []*RepeatedResourceWithRepeatedIds `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty"`
	Name      string                             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *RepeatedResourceWithRepeatedIdsRequest) Reset() {
	*x = RepeatedResourceWithRepeatedIdsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_example_v1_bulk_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepeatedResourceWithRepeatedIdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepeatedResourceWithRepeatedIdsRequest) ProtoMessage() {}

func (x *RepeatedResourceWithRepeatedIdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_example_v1_bulk_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepeatedResourceWithRepeatedIdsRequest.ProtoReflect.Descriptor instead.
func (*RepeatedResourceWithRepeatedIdsRequest) Descriptor() ([]byte, []int) {
	return file_proto_example_v1_bulk_proto_rawDescGZIP(), []int{5}
}

func (x *RepeatedResourceWithRepeatedIdsRequest) GetResources() []*RepeatedResourceWithRepeatedIds {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *RepeatedResourceWithRepeatedIdsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MappedResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mapped map[string]*NestedResource `protobuf:"bytes,1,rep,name=mapped,proto3" json:"mapped,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MappedResourceRequest) Reset() {
	*x = MappedResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_example_v1_bulk_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MappedResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MappedResourceRequest) ProtoMessage() {}

func (x *MappedResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_example_v1_bulk_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MappedResourceRequest.ProtoReflect.Descriptor instead.
func (*MappedResourceRequest) Descriptor() ([]byte, []int) {
	return file_proto_example_v1_bulk_proto_rawDescGZIP(), []int{6}
}

func (x *MappedResourceRequest) GetMapped() map[string]*NestedResource {
	if x != nil {
		return x.Mapped
	}
	return nil
}

type MappedIds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids       map[string]string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CompanyId string            `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *MappedIds) Reset() {
	*x = MappedIds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_example_v1_bulk_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MappedIds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MappedIds) ProtoMessage() {}

func (x *MappedIds) ProtoReflect() protoreflect.Message {
	mi := &file_proto_example_v1_bulk_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MappedIds.ProtoReflect.Descriptor instead.
func (*MappedIds) Descriptor() ([]byte, []int) {
	return file_proto_example_v1_bulk_proto_rawDescGZIP(), []int{7}
}

func (x *MappedIds) GetIds() map[string]string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *MappedIds) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

type NestedResourceWithMappedIds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nested map[string]*MappedIds `protobuf:"bytes,1,rep,name=nested,proto3" json:"nested,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *NestedResourceWithMappedIds) Reset() {
	*x = NestedResourceWithMappedIds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_example_v1_bulk_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NestedResourceWithMappedIds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NestedResourceWithMappedIds) ProtoMessage() {}

func (x *NestedResourceWithMappedIds) ProtoReflect() protoreflect.Message {
	mi := &file_proto_example_v1_bulk_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NestedResourceWithMappedIds.ProtoReflect.Descriptor instead.
func (*NestedResourceWithMappedIds) Descriptor() ([]byte, []int) {
	return file_proto_example_v1_bulk_proto_rawDescGZIP(), []int{8}
}

func (x *NestedResourceWithMappedIds) GetNested() map[string]*MappedIds {
	if x != nil {
		return x.Nested
	}
	return nil
}

type MappedResourceWithNestedMappedIds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resources map[string]*NestedResourceWithMappedIds `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MappedResourceWithNestedMappedIds) Reset() {
	*x = MappedResourceWithNestedMappedIds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_example_v1_bulk_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MappedResourceWithNestedMappedIds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MappedResourceWithNestedMappedIds) ProtoMessage() {}

func (x *MappedResourceWithNestedMappedIds) ProtoReflect() protoreflect.Message {
	mi := &file_proto_example_v1_bulk_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MappedResourceWithNestedMappedIds.ProtoReflect.Descriptor instead.
func (*MappedResourceWithNestedMappedIds) Descriptor() ([]byte, []int) {
	return file_proto_example_v1_bulk_proto_rawDescGZIP(), []int{9}
}

func (x *MappedResourceWithNestedMappedIds) GetResources() map[string]*NestedResourceWithMappedIds {
	if x != nil {
		return x.Resources
	}
	return nil
}

type MappedResourceWithNestedMappedIdsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mapped map[string]*MappedResourceWithNestedMappedIds `protobuf:"bytes,1,rep,name=mapped,proto3" json:"mapped,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MappedResourceWithNestedMappedIdsRequest) Reset() {
	*x = MappedResourceWithNestedMappedIdsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_example_v1_bulk_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MappedResourceWithNestedMappedIdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MappedResourceWithNestedMappedIdsRequest) ProtoMessage() {}

func (x *MappedResourceWithNestedMappedIdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_example_v1_bulk_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MappedResourceWithNestedMappedIdsRequest.ProtoReflect.Descriptor instead.
func (*MappedResourceWithNestedMappedIdsRequest) Descriptor() ([]byte, []int) {
	return file_proto_example_v1_bulk_proto_rawDescGZIP(), []int{10}
}

func (x *MappedResourceWithNestedMappedIdsRequest) GetMapped() map[string]*MappedResourceWithNestedMappedIds {
	if x != nil {
		return x.Mapped
	}
	return nil
}

var File_proto_example_v1_bulk_proto protoreflect.FileDescriptor

var file_proto_example_v1_bulk_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f,
	0x76, 0x31, 0x2f, 0x62, 0x75, 0x6c, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1d, 0x6e, 0x72, 0x66, 0x31, 0x31,
	0x30, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x34, 0x0a, 0x10, 0x52, 0x65, 0x70, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x3a,
	0x0c, 0xc2, 0xbb, 0x01, 0x08, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x55, 0x0a,
	0x17, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x22, 0x6e, 0x0a, 0x1e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x57, 0x69, 0x74, 0x68, 0x49, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x49, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42,
	0x04, 0xc0, 0xbb, 0x01, 0x01, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x23, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04,
	0xc8, 0xbb, 0x01, 0x01, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x22,
	0x61, 0x0a, 0x1f, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x49,
	0x64, 0x73, 0x12, 0x30, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x49, 0x64, 0x52, 0x07, 0x72, 0x65, 0x70,
	0x65, 0x61, 0x74, 0x73, 0x3a, 0x0c, 0xc2, 0xbb, 0x01, 0x08, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x22, 0x87, 0x01, 0x0a, 0x26, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x70, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a,
	0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x57, 0x69,
	0x74, 0x68, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x49, 0x64, 0x73, 0x52, 0x09, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xb5, 0x01, 0x0a,
	0x15, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x06, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x64,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x1a, 0x55, 0x0a,
	0x0b, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xa0, 0x01, 0x0a, 0x09, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x49,
	0x64, 0x73, 0x12, 0x36, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x70,
	0x70, 0x65, 0x64, 0x49, 0x64, 0x73, 0x2e, 0x49, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42,
	0x04, 0xc0, 0xbb, 0x01, 0x01, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x23, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04,
	0xc8, 0xbb, 0x01, 0x01, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x1a,
	0x36, 0x0a, 0x08, 0x49, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xce, 0x01, 0x0a, 0x1b, 0x4e, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x61,
	0x70, 0x70, 0x65, 0x64, 0x49, 0x64, 0x73, 0x12, 0x4b, 0x0a, 0x06, 0x6e, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x49, 0x64, 0x73,
	0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6e, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x1a, 0x50, 0x0a, 0x0b, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x49, 0x64, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x3a, 0x10, 0xc2, 0xbb, 0x01, 0x0c, 0x4e, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x22, 0xe6, 0x01, 0x0a, 0x21, 0x4d, 0x61, 0x70,
	0x70, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x57, 0x69, 0x74, 0x68, 0x4e,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x49, 0x64, 0x73, 0x12, 0x5a,
	0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x3c, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x61, 0x70, 0x70, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x57, 0x69, 0x74,
	0x68, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x49, 0x64, 0x73,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x1a, 0x65, 0x0a, 0x0e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x61, 0x70,
	0x70, 0x65, 0x64, 0x49, 0x64, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0xee, 0x01, 0x0a, 0x28, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x57, 0x69, 0x74, 0x68, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4d, 0x61,
	0x70, 0x70, 0x65, 0x64, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x58,
	0x0a, 0x06, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40,
	0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x70, 0x70,
	0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x57, 0x69, 0x74, 0x68, 0x4e, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x1a, 0x68, 0x0a, 0x0b, 0x4d, 0x61, 0x70, 0x70,
	0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x43, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x57, 0x69, 0x74, 0x68, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4d, 0x61,
	0x70, 0x70, 0x65, 0x64, 0x49, 0x64, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x32, 0xd5, 0x03, 0x0a, 0x04, 0x42, 0x75, 0x6c, 0x6b, 0x12, 0x53, 0x0a, 0x06, 0x53,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x23, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x0e, 0xc2, 0xbb, 0x01, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0xd0, 0xbb, 0x01, 0x01,
	0x12, 0x58, 0x0a, 0x06, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x2a, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x57, 0x69, 0x74, 0x68, 0x49, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0c, 0xc2, 0xbb,
	0x01, 0x04, 0x65, 0x64, 0x69, 0x74, 0xd0, 0xbb, 0x01, 0x01, 0x12, 0x61, 0x0a, 0x07, 0x52, 0x65,
	0x70, 0x65, 0x61, 0x74, 0x73, 0x12, 0x32, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x49,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x0c, 0xc2, 0xbb, 0x01, 0x04, 0x65, 0x64, 0x69, 0x74, 0xd0, 0xbb, 0x01, 0x01, 0x12, 0x51, 0x0a,
	0x06, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x12, 0x21, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x0e, 0xc2, 0xbb, 0x01, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0xd0, 0xbb, 0x01, 0x01,
	0x12, 0x68, 0x0a, 0x0c, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x64,
	0x12, 0x34, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61,
	0x70, 0x70, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x57, 0x69, 0x74, 0x68,
	0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x49, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0c, 0xc2, 0xbb,
	0x01, 0x04, 0x65, 0x64, 0x69, 0x74, 0xd0, 0xbb, 0x01, 0x01, 0x42, 0x4c, 0x5a, 0x4a, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_example_v1_bulk_proto_rawDescOnce sync.Once
	file_proto_example_v1_bulk_proto_rawDescData = file_proto_example_v1_bulk_proto_rawDesc
)

func file_proto_example_v1_bulk_proto_rawDescGZIP() []byte {
	file_proto_example_v1_bulk_proto_rawDescOnce.Do(func() {
		file_proto_example_v1_bulk_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_example_v1_bulk_proto_rawDescData)
	})
	return file_proto_example_v1_bulk_proto_rawDescData
}

var file_proto_example_v1_bulk_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_proto_example_v1_bulk_proto_goTypes = []any{
	(*RepeatedResource)(nil),                         // 0: example.v1.RepeatedResource
	(*RepeatedResourceRequest)(nil),                  // 1: example.v1.RepeatedResourceRequest
	(*RepeatedResourceWithIdsRequest)(nil),           // 2: example.v1.RepeatedResourceWithIdsRequest
	(*RepeatedId)(nil),                               // 3: example.v1.RepeatedId
	(*RepeatedResourceWithRepeatedIds)(nil),          // 4: example.v1.RepeatedResourceWithRepeatedIds
	(*RepeatedResourceWithRepeatedIdsRequest)(nil),   // 5: example.v1.RepeatedResourceWithRepeatedIdsRequest
	(*MappedResourceRequest)(nil),                    // 6: example.v1.MappedResourceRequest
	(*MappedIds)(nil),                                // 7: example.v1.MappedIds
	(*NestedResourceWithMappedIds)(nil),              // 8: example.v1.NestedResourceWithMappedIds
	(*MappedResourceWithNestedMappedIds)(nil),        // 9: example.v1.MappedResourceWithNestedMappedIds
	(*MappedResourceWithNestedMappedIdsRequest)(nil), // 10: example.v1.MappedResourceWithNestedMappedIdsRequest
	nil,                    // 11: example.v1.MappedResourceRequest.MappedEntry
	nil,                    // 12: example.v1.MappedIds.IdsEntry
	nil,                    // 13: example.v1.NestedResourceWithMappedIds.NestedEntry
	nil,                    // 14: example.v1.MappedResourceWithNestedMappedIds.ResourcesEntry
	nil,                    // 15: example.v1.MappedResourceWithNestedMappedIdsRequest.MappedEntry
	(*NestedResource)(nil), // 16: example.v1.NestedResource
	(*Response)(nil),       // 17: example.v1.Response
}
var file_proto_example_v1_bulk_proto_depIdxs = []int32{
	0,  // 0: example.v1.RepeatedResourceRequest.resources:type_name -> example.v1.RepeatedResource
	16, // 1: example.v1.RepeatedResourceWithIdsRequest.resources:type_name -> example.v1.NestedResource
	3,  // 2: example.v1.RepeatedResourceWithRepeatedIds.repeats:type_name -> example.v1.RepeatedId
	4,  // 3: example.v1.RepeatedResourceWithRepeatedIdsRequest.resources:type_name -> example.v1.RepeatedResourceWithRepeatedIds
	11, // 4: example.v1.MappedResourceRequest.mapped:type_name -> example.v1.MappedResourceRequest.MappedEntry
	12, // 5: example.v1.MappedIds.ids:type_name -> example.v1.MappedIds.IdsEntry
	13, // 6: example.v1.NestedResourceWithMappedIds.nested:type_name -> example.v1.NestedResourceWithMappedIds.NestedEntry
	14, // 7: example.v1.MappedResourceWithNestedMappedIds.resources:type_name -> example.v1.MappedResourceWithNestedMappedIds.ResourcesEntry
	15, // 8: example.v1.MappedResourceWithNestedMappedIdsRequest.mapped:type_name -> example.v1.MappedResourceWithNestedMappedIdsRequest.MappedEntry
	16, // 9: example.v1.MappedResourceRequest.MappedEntry.value:type_name -> example.v1.NestedResource
	7,  // 10: example.v1.NestedResourceWithMappedIds.NestedEntry.value:type_name -> example.v1.MappedIds
	8,  // 11: example.v1.MappedResourceWithNestedMappedIds.ResourcesEntry.value:type_name -> example.v1.NestedResourceWithMappedIds
	9,  // 12: example.v1.MappedResourceWithNestedMappedIdsRequest.MappedEntry.value:type_name -> example.v1.MappedResourceWithNestedMappedIds
	1,  // 13: example.v1.Bulk.Simple:input_type -> example.v1.RepeatedResourceRequest
	2,  // 14: example.v1.Bulk.Nested:input_type -> example.v1.RepeatedResourceWithIdsRequest
	5,  // 15: example.v1.Bulk.Repeats:input_type -> example.v1.RepeatedResourceWithRepeatedIdsRequest
	6,  // 16: example.v1.Bulk.Mapped:input_type -> example.v1.MappedResourceRequest
	10, // 17: example.v1.Bulk.NestedMapped:input_type -> example.v1.MappedResourceWithNestedMappedIdsRequest
	17, // 18: example.v1.Bulk.Simple:output_type -> example.v1.Response
	17, // 19: example.v1.Bulk.Nested:output_type -> example.v1.Response
	17, // 20: example.v1.Bulk.Repeats:output_type -> example.v1.Response
	17, // 21: example.v1.Bulk.Mapped:output_type -> example.v1.Response
	17, // 22: example.v1.Bulk.NestedMapped:output_type -> example.v1.Response
	18, // [18:23] is the sub-list for method output_type
	13, // [13:18] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_proto_example_v1_bulk_proto_init() }
func file_proto_example_v1_bulk_proto_init() {
	if File_proto_example_v1_bulk_proto != nil {
		return
	}
	file_proto_example_v1_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_example_v1_bulk_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*RepeatedResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_example_v1_bulk_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*RepeatedResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_example_v1_bulk_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*RepeatedResourceWithIdsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_example_v1_bulk_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*RepeatedId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_example_v1_bulk_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*RepeatedResourceWithRepeatedIds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_example_v1_bulk_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*RepeatedResourceWithRepeatedIdsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_example_v1_bulk_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*MappedResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_example_v1_bulk_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*MappedIds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_example_v1_bulk_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*NestedResourceWithMappedIds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_example_v1_bulk_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*MappedResourceWithNestedMappedIds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_example_v1_bulk_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*MappedResourceWithNestedMappedIdsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_example_v1_bulk_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_example_v1_bulk_proto_goTypes,
		DependencyIndexes: file_proto_example_v1_bulk_proto_depIdxs,
		MessageInfos:      file_proto_example_v1_bulk_proto_msgTypes,
	}.Build()
	File_proto_example_v1_bulk_proto = out.File
	file_proto_example_v1_bulk_proto_rawDesc = nil
	file_proto_example_v1_bulk_proto_goTypes = nil
	file_proto_example_v1_bulk_proto_depIdxs = nil
}
